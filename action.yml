name: 'Hello World'
description: 'Greet someone'
inputs:
  ecr-repository:
    description: Name of your ECR repository
    required: true
  ecr-registry:
    description: Comma-separated string of ECR image tags
    required: true
  image-tag:
    description: Docker Image ECR image tag
    default: latest
  dockerfile-path:
    description: Name of Dockerfile to use
    default: Dockerfile
  extra-build-args:
    description: Extra flags to pass to docker build (see docs.docker.com/engine/reference/commandline/build)
    default: ""
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    run: |
      docker pull ${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }}:latest || \
        docker pull ${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }}:${{ inputs.image-tag }} || \
        true
      docker build \
        --cache-from ${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }}:${{ inputs.image-tag }} \
        --cache-from ${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }}:latest \
        -t ${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }}:${{ inputs.image-tag }} \
        -t ${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }}:latest \
        . -f ${{ inputs.dockerfile-path }}
      docker push ${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }} --all-tags
      echo "::set-output name=image::${{ inputs.ecr-registry }}/${{ inputs.ecr-registry }}:${{ inputs.image-tag }}"
    shell: bash
