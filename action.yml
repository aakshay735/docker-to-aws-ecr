name: 'Hello World'
description: 'Greet someone'
inputs:
  ecr-repository:
    description: Name of your ECR repository
    required: true
  ecr-registry:
    description: The URI of the ECR Private or ECR Public registry.
    required: true
  image-tag:
    description: Docker Image ECR image tag
    default: latest
  dockerfile-path:
    description: Name of Dockerfile to use
    default: Dockerfile
  extra-build-args:
    description: Extra flags to pass to docker build (see docs.docker.com/engine/reference/commandline/build)
    default: ""
outputs:
  image:
    description: "ECR Image Id"
    value: ${{ steps.output-tag.outputs.image }}
runs:
  using: "composite"
  steps:
    - run: echo "Build and push"
      shell: bash

    - run: docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest || docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG || true
      shell: bash

    - id: build
      run: docker build --cache-from ${{ inputs.ecr-registry }}/${{ inputs.ecr-repository }}:${{ inputs.image-tag }} --cache-from ${{ inputs.ecr-registry }}/${{ inputs.ecr-repository }}:latest -t ${{ inputs.ecr-registry }}/${{ inputs.ecr-repository }}:${{ inputs.image-tag }} -t ${{ inputs.ecr-registry }}/${{ inputs.ecr-repository }}:latest . -f ${{ inputs.dockerfile-path }}
      shell: bash

    - id: push
      run: docker push ${{ inputs.ecr-registry }}/${{ inputs.ecr-repository }} --all-tags
      shell: bash

    - id: output-tag
      run: echo "image=${{ inputs.ecr-registry }}/${{ inputs.ecr-repository }}:${{ inputs.image-tag }}" >> $GITHUB_OUTPUT
      shell: bash